import numpy as np
from librosa import load
from spectrogram.melspec import Melspec

# same parameters as in export_melspec_to_c
n_mels = 16
n_fft = 128
noverlap = 64

signal, fs = load('nine.wav', sr = 5000)

# creating a Melspec instance and spectrogram processing
melspec = Melspec(n_fft, n_mels, noverlap)
spec_py = melspec.process_melspectrogram(signal,fs, report = True)
melspec.plot(f"Spectrogram py")

# spectrogram processed in c

# Vector generado en arduino
# vector = np.array([    0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.02, 0.03, 0.04, 0.03, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.42, 1.77, 0.51, 0.15, 0.08, 0.06, 0.04, 0.03, 0.02, 0.02, 0.02, 0.01, 0.02, 0.01, 0.01, 0.01, 0.37, 2.75, 0.83, 0.22, 0.13, 0.17, 0.05, 0.04, 0.03, 0.03, 0.03, 0.02, 0.02, 0.02, 0.02, 0.02, 0.51, 3.70, 0.91, 0.29, 0.26, 0.23, 0.19, 0.14, 0.12, 0.11, 0.11, 0.09, 0.10, 0.09, 0.09, 0.08, 0.58, 4.75, 1.34, 0.24, 0.19, 0.39, 0.26, 0.17, 0.13, 0.13, 0.15, 0.13, 0.13, 0.11, 0.13, 0.09, 1.26, 5.10, 1.34, 0.28, 0.15, 0.39, 0.21, 0.13, 0.10, 0.08, 0.10, 0.09, 0.10, 0.08, 0.09, 0.08, 0.55, 5.27, 1.29, 0.77, 0.52, 0.41, 0.41, 0.34, 0.28, 0.24, 0.24, 0.26, 0.28, 0.16, 0.21, 0.20, 1.88, 5.58, 1.56, 0.28, 0.26, 0.28, 0.10, 0.07, 0.06, 0.06, 0.08, 0.08, 0.07, 0.10, 0.07, 0.03, 0.63, 5.21, 1.87, 0.91, 0.66, 0.59, 0.42, 0.32, 0.31, 0.34, 0.21, 0.29, 0.25, 0.22, 0.22, 0.23, 1.29, 5.61, 2.11, 1.38, 0.43, 0.71, 0.42, 0.51, 0.33, 1.06, 1.64, 0.92, 0.59, 0.53, 0.22, 0.12, 0.98, 5.75, 2.69, 1.67, 0.94, 0.89, 1.14, 0.77, 0.63, 1.49, 2.26, 1.23, 1.09, 0.76, 0.48, 0.22, 1.23, 5.82, 2.02, 1.59, 1.06, 1.32, 1.68, 1.32, 1.26, 1.98, 2.37, 1.58, 0.67, 1.00, 0.43, 0.22, 1.35, 5.30, 2.12, 2.11, 1.58, 0.90, 2.33, 0.48, 1.24, 1.81, 2.86, 1.77, 1.15, 0.86, 0.59, 0.41, 0.98, 4.23, 1.50, 2.09, 2.12, 0.87, 1.79, 0.87, 1.18, 1.52, 2.51, 1.26, 0.96, 0.71, 0.73, 0.25, 0.82, 3.29, 1.75, 2.04, 0.87, 0.39, 1.26, 0.60, 0.52, 1.28, 2.13, 1.51, 1.24, 0.92, 0.62, 0.11, 0.47, 2.22, 1.94, 2.01, 1.15, 0.48, 1.22, 0.39, 0.39, 1.21, 1.89, 1.58, 1.51, 0.91, 0.67, 0.18, 0.33, 1.06, 1.75, 1.44, 1.26, 0.45, 0.92, 0.34, 0.35, 0.53, 1.07, 1.05, 1.47, 0.80, 0.67, 0.14, 0.08, 0.59, 1.81, 1.11, 0.80, 0.42, 0.36, 0.25, 0.16, 0.28, 0.56, 0.77, 1.02, 0.86, 0.49, 0.13, 0.04, 0.80, 2.28, 0.64, 0.45, 0.40, 0.22, 0.10, 0.21, 0.09, 0.37, 0.45, 0.70, 0.25, 0.31, 0.08, 0.54, 1.18, 2.19, 0.70, 0.42, 0.27, 0.33, 0.18, 0.17, 0.09, 0.27, 0.20, 0.35, 0.33, 0.26, 0.07, 0.35, 1.26, 1.84, 0.77, 0.26, 0.22, 0.25, 0.17, 0.13, 0.05, 0.21, 0.12, 0.14, 0.26, 0.16, 0.07, 0.21, 0.88, 1.74, 0.55, 0.26, 0.27, 0.11, 0.10, 0.11, 0.08, 0.10, 0.15, 0.14, 0.20, 0.09, 0.04, 0.13, 0.99, 1.22, 0.59, 0.27, 0.19, 0.13, 0.10, 0.06, 0.06, 0.09, 0.10, 0.12, 0.16, 0.10, 0.07, 0.14, 1.34, 0.85, 0.49, 0.09, 0.20, 0.04, 0.02, 0.02, 0.02, 0.03, 0.07, 0.09, 0.09, 0.04, 0.01, 0.18, 1.60, 0.45, 0.31, 0.10, 0.16, 0.04, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.00, 0.19, 2.01, 0.32, 0.19, 0.19, 0.14, 0.06, 0.05, 0.05, 0.04, 0.04, 0.04, 0.03, 0.03, 0.03, 0.03, 0.09, 2.05, 0.39, 0.21, 0.11, 0.07, 0.05, 0.03, 0.03, 0.03, 0.03, 0.03, 0.03, 0.04, 0.03, 0.02, 0.41, 1.15, 0.28, 0.11, 0.04, 0.04, 0.05, 0.03, 0.02, 0.02, 0.01, 0.02, 0.03, 0.04, 0.02, 0.01, 0.24, 0.50, 0.13, 0.12, 0.08, 0.06, 0.05, 0.04, 0.04, 0.04, 0.03, 0.03, 0.03, 0.04, 0.03, 0.03, 0.04, 0.22, 0.07, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.16, 0.05, 0.02, 0.02, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) 

# Vector generado en C
vector = np.array([  0.00110, 0.00603, 0.00264, 0.00166, 0.00185, 0.00404, 0.00253, 0.00123, 0.00156, 0.00257, 0.00207, 0.00218, 0.00196, 0.00190, 0.00141, 0.00053, 0.00098, 0.00677, 0.00254, 0.00190, 0.00216, 0.00296, 0.00281, 0.00135, 0.00194, 0.00226, 0.00219, 0.00265, 0.00206, 0.00215, 0.00182, 0.00035, 0.00050, 0.00767, 0.00152, 0.00209, 0.00264, 0.00188, 0.00177, 
0.00175, 0.00178, 0.00220, 0.00259, 0.00179, 0.00253, 0.00252, 0.00169, 0.00029, 0.00198, 0.00663, 0.00345, 0.00127, 0.00270, 0.00177, 0.00188, 0.00128, 0.00161, 0.00216, 0.00179, 0.00184, 0.00191, 0.00197, 0.00103, 0.00055, 0.01917, 0.03389, 0.04136, 0.03266, 0.02439, 0.01715, 0.01043, 0.01256, 0.00897, 0.00805, 0.00774, 0.00799, 0.00820, 0.00719, 0.00668, 0.00707, 0.42212, 1.76778, 0.51082, 0.15275, 0.07746, 0.06439, 0.04303, 0.02815, 0.02038, 0.02179, 0.01796, 0.01480, 0.01501, 0.01364, 0.01121, 0.01352, 0.36959, 2.74783, 0.82939, 0.21694, 0.12516, 
0.16639, 0.04770, 0.04300, 0.03282, 0.02991, 0.02924, 0.02485, 0.02225, 0.02465, 0.02354, 0.01794, 0.50619, 3.70229, 0.91478, 0.29136, 0.25624, 0.22793, 0.18639, 0.14242, 0.11664, 0.10970, 0.10845, 0.09247, 0.09987, 0.08885, 0.09298, 0.07744, 0.58466, 4.74783, 1.34090, 0.24372, 0.19265, 0.39061, 0.25573, 0.16857, 0.12637, 0.12830, 0.15225, 0.12993, 0.13087, 0.11193, 0.12884, 0.08810, 1.25511, 5.09617, 1.33667, 0.28475, 0.15175, 0.38805, 0.21153, 0.12643, 0.10242, 0.08118, 0.09969, 0.08619, 0.10288, 0.07525, 0.08946, 0.07868, 0.55388, 5.27050, 1.28706, 
0.76789, 0.51833, 0.40689, 0.41029, 0.33702, 0.28465, 0.24023, 0.24399, 0.26270, 0.27695, 0.15918, 0.21064, 0.20196, 1.87747, 5.57891, 1.55575, 0.28305, 0.26481, 0.27540, 0.10359, 0.06833, 0.06349, 0.06202, 0.08430, 0.07815, 0.07356, 0.10468, 0.06803, 0.02647, 0.63214, 5.21178, 1.87243, 0.91106, 0.65702, 0.59156, 0.42381, 0.32223, 0.30533, 0.34153, 0.21371, 0.28859, 0.24532, 0.21878, 0.21624, 0.22953, 1.28569, 5.61076, 2.10514, 1.38146, 0.43068, 0.71022, 0.41711, 0.51467, 0.33298, 1.05690, 1.63513, 0.91643, 0.58662, 0.52625, 0.22247, 0.11534, 0.98068, 
5.74845, 2.69224, 1.66946, 0.94022, 0.88579, 1.13781, 0.76834, 0.62780, 1.48768, 2.25996, 1.23280, 1.08503, 0.76008, 0.47667, 0.22465, 1.23392, 5.82338, 2.01745, 1.59154, 1.05710, 1.32270, 1.68344, 1.31919, 1.25655, 1.98155, 2.37123, 1.58231, 0.67243, 1.00293, 0.42543, 0.21898, 1.34500, 5.29877, 2.11655, 2.10607, 1.57564, 0.89937, 2.32638, 0.48478, 1.24105, 1.81297, 2.85955, 1.77369, 1.15049, 0.85922, 0.58725, 0.41304, 0.98150, 4.23355, 1.49802, 2.09094, 2.11585, 0.86579, 1.79171, 0.87274, 1.17889, 1.51699, 2.50675, 1.25745, 0.95899, 0.71423, 0.72725, 
0.24890, 0.82228, 3.28502, 1.74690, 2.04378, 0.86524, 0.39481, 1.25932, 0.59645, 0.51964, 1.27947, 2.12608, 1.51170, 1.23866, 0.91678, 0.61894, 0.10597, 0.46523, 2.22079, 1.94448, 2.01012, 1.15098, 0.48123, 1.21617, 0.38944, 0.39461, 1.21314, 1.89321, 1.57759, 1.50551, 0.90677, 0.66634, 0.17709, 0.32517, 1.05580, 1.74759, 1.44069, 1.26363, 0.45151, 0.91566, 0.33736, 0.34741, 0.53319, 1.07117, 1.04917, 1.46800, 0.79774, 0.66568, 0.13694, 0.07621, 0.59165, 1.80878, 1.11284, 0.79651, 0.41512, 0.36377, 0.24637, 0.16324, 0.28122, 0.55853, 0.77323, 1.01917, 
0.85727, 0.49446, 0.12928, 0.03718, 0.79949, 2.27969, 0.64359, 0.45193, 0.40492, 0.21870, 0.10281, 0.21297, 0.09313, 0.37162, 0.45253, 0.70368, 0.24627, 0.31395, 0.07863, 0.53514, 1.17573, 2.19193, 0.70128, 0.42181, 0.26936, 0.33147, 0.18191, 0.16969, 0.09161, 0.26898, 0.19852, 0.34520, 0.33386, 0.26111, 0.06585, 0.35065, 1.25582, 1.83651, 0.76614, 0.25522, 0.22198, 0.24585, 0.17402, 0.13368, 0.04924, 0.21462, 0.12380, 0.14179, 0.25915, 0.15792, 0.06895, 0.21002, 0.88067, 1.74126, 0.55489, 0.26392, 0.27314, 0.10626, 0.09823, 0.10647, 0.07882, 0.09593, 
0.14772, 0.13993, 0.19770, 0.09295, 0.04474, 0.12944, 0.99028, 1.22484, 0.58952, 0.27500, 0.19479, 0.12562, 0.09746, 0.06481, 0.05844, 0.08646, 0.09695, 0.11698, 0.16008, 0.09792, 0.06733, 0.13667, 1.34059, 0.84891, 0.49108, 0.09475, 0.19644, 0.04284, 0.02458, 0.02098, 0.01827, 0.02849, 0.06636, 0.08673, 0.09495, 0.04310, 0.01165, 0.18035, 1.59625, 0.45232, 0.30951, 0.09725, 0.15773, 0.04458, 0.02085, 0.01407, 0.01280, 0.01326, 0.01236, 0.01034, 0.00933, 0.00747, 0.00411, 0.19493, 2.00705, 0.32415, 0.19304, 0.18927, 0.14251, 0.05853, 0.04772, 0.04666, 
0.04438, 0.04302, 0.03591, 0.03025, 0.03045, 0.03259, 0.03194, 0.09093, 2.05236, 0.39431, 0.21064, 0.11246, 0.07047, 0.04969, 0.03378, 0.03077, 0.02839, 0.02685, 0.02670, 0.02844, 0.03528, 0.02619, 0.02277, 0.41152, 1.15253, 0.28390, 0.11060, 0.03910, 0.04125, 0.04681, 0.02870, 0.02274, 0.02027, 0.01306, 0.01990, 0.02579, 0.04230, 0.01564, 0.00999, 0.24013, 0.50352, 0.13065, 0.12463, 0.07593, 0.06156, 0.04770, 0.04445, 0.03851, 0.03612, 0.03286, 0.02714, 0.03088, 0.03949, 0.03305, 0.02734, 0.03586, 0.21833, 0.06501, 0.01645, 0.02161, 0.01443, 0.00846, 
0.00687, 0.00697, 0.00644, 0.00715, 0.00778, 0.00524, 0.00589, 0.00731, 0.00553, 0.01953, 0.16477, 0.05234, 0.02495, 0.01985, 0.01256, 0.01073, 0.00938, 0.00812, 0.01038, 0.00755, 0.00787, 0.00684, 0.00801, 0.00761, 0.00675, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0]) 

spec_c = np.reshape(vector, (melspec.n_blocks, melspec.n_mels))
melspec.set_params(spec = spec_c)
melspec.plot(f"Spectrogram c")

# No funca por diferencia de precision, ver que hacer ac√°
# print("Equals: ",(spec_py == spec_c).all())

melspec.set_params(spec = np.abs(spec_py-spec_c))
melspec.plot(f"Spectrogram diff")
